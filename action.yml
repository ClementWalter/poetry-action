name: Poetry setup
description: Add poetry and install deps with cache

inputs:
  os:
    required: true
    description: OS to use in the cache key

  python-version:
    required: true
    description: Python version to use in the cache key

runs:
  using: "composite"
  steps:
    - name: Install Poetry
      shell: pwsh
      run: |
        python -m pip install --upgrade pip
        python -m pip install poetry
        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project false
        poetry config virtualenvs.path .virtualenvs

    - name: Poetry Version
      shell: pwsh
      id: poetry-version
      run: echo "::set-output name=version::$(poetry --version | grep -oP '[\d\.]+')"

    - name: Cache Poetry virtualenv
      uses: actions/cache@v2
      id: cache
      with:
        path: .virtualenvs
        key: ${{ inputs.os }}-${{ inputs.python-version }}-poetry-${{ steps.poetry-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ inputs.os }}-${{ inputs.python-version }}-poetry-${{ steps.poetry-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      shell: pwsh
      run: |
        poetry install
      if: steps.cache.outputs.cache-hit != 'true'
