name: Poetry setup
description: Add poetry and install deps with cache

inputs:
  os:
    required: true
    description: OS to use in the cache key

  python-version:
    required: true
    description: Python version to use in the cache key

runs:
  using: "composite"
  steps:
    - name: Cache Poetry
      id: cache-poetry
      uses: actions/cache@v3
      with:
        path: .installed-poetry
        key: ${{ inputs.os }}-${{ inputs.python-version }}-poetry-${{ hashFiles('.installed-poetry/**') }}
      
    - name: Install Poetry
      shell: pwsh
      env:
        POETRY_HOME: ${{ github.workspace }}/.installed-poetry
      if: steps.cache-poetry.outputs.cache-hit != 'true'
      run: |
        (Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | python -

        # add it to path for currently and future steps
        $env:PATH = '{0}{1}{2}' -f (Join-Path -Path '${{ github.workspace }}/.installed-poetry/' -ChildPath 'bin'),[IO.Path]::PathSeparator,$env:PATH
        Write-Output 'PATH=$env:PATH' | Out-File -FilePath $env:GITHUB_ENV -Encoding utf8

        poetry config virtualenvs.create true
        poetry config virtualenvs.in-project false
        poetry config virtualenvs.path .virtualenvs

    - name: Poetry Version
      shell: pwsh
      id: poetry-version
      run: echo "::set-output name=version::$(poetry --version | grep -oP '[\d\.]+')"

    - name: Cache Poetry virtualenv
      uses: actions/cache@v3
      id: cache-deps
      with:
        path: .virtualenvs
        key: ${{ inputs.os }}-${{ inputs.python-version }}-poetry-deps-${{ steps.poetry-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies
      shell: pwsh
      run: |
        poetry install
      if: steps.cache-deps.outputs.cache-hit != 'true'
